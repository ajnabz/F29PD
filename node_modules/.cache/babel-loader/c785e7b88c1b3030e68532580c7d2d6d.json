{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/clockFunction.js\";\nimport React from 'react';\nimport Clock from 'react-clock';\nconst CLOCK_VIEW_MODES = {\n  ANALOG: 'analog',\n  DIGITAL: 'digital'\n};\nlet time = new Date();\n\nclass ClockFunction extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewMode: CLOCK_VIEW_MODES.DIGITAL\n    };\n\n    this.renderAnalog = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, time.toLocaleTimeString()));\n    };\n\n    this.renderDigital = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Clock, {\n        value: time,\n        size: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    };\n\n    this.changeViewMode = () => {\n      if (this.state.viewMode === CLOCK_VIEW_MODES.ANALOG) this.setState({\n        viewMode: CLOCK_VIEW_MODES.DIGITAL\n      });\n      if (this.state.viewMode === CLOCK_VIEW_MODES.DIGITAL) this.setState({\n        viewMode: CLOCK_VIEW_MODES.ANALOG\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.changeViewMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.viewMode === CLOCK_VIEW_MODES.ANALOG && this.renderAnalog(), this.state.viewMode === CLOCK_VIEW_MODES.DIGITAL && this.renderDigital());\n  }\n\n}\n\nexport default ClockFunction;","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/clockFunction.js"],"names":["React","Clock","CLOCK_VIEW_MODES","ANALOG","DIGITAL","time","Date","ClockFunction","Component","state","viewMode","renderAnalog","backgroundColor","toLocaleTimeString","renderDigital","changeViewMode","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,gBAAgB,GAAG;AAAEC,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,OAAO,EAAE;AAA7B,CAAzB;AACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;AAEA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AAAEC,MAAAA,QAAQ,EAAER,gBAAgB,CAACE;AAA7B,KADkC;;AAAA,SAG1CO,YAH0C,GAG3B,MAAM;AACnB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,IAAI,CAACQ,kBAAL,EADL,CADJ,CADJ;AAOA,KAXwC;;AAAA,SAY1CC,aAZ0C,GAY1B,MAAM;AACpB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAET,IAAd;AAAoB,QAAA,IAAI,EAAE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKD,KAlByC;;AAAA,SAoB1CU,cApB0C,GAoBzB,MAAM;AACrB,UAAI,KAAKN,KAAL,CAAWC,QAAX,KAAwBR,gBAAgB,CAACC,MAA7C,EAAqD,KAAKa,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAER,gBAAgB,CAACE;AAA7B,OAAd;AACrD,UAAI,KAAKK,KAAL,CAAWC,QAAX,KAAwBR,gBAAgB,CAACE,OAA7C,EAAsD,KAAKY,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAER,gBAAgB,CAACC;AAA7B,OAAd;AACvD,KAvByC;AAAA;;AAyB1Cc,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,OAAO,EAAE,KAAKF,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWC,QAAX,KAAwBR,gBAAgB,CAACC,MAAzC,IAAmD,KAAKQ,YAAL,EADtD,EAEG,KAAKF,KAAL,CAAWC,QAAX,KAAwBR,gBAAgB,CAACE,OAAzC,IAAoD,KAAKU,aAAL,EAFvD,CADF;AAMD;;AAhCyC;;AAoC5C,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport Clock from 'react-clock';\n\nconst CLOCK_VIEW_MODES = { ANALOG: 'analog', DIGITAL: 'digital' };\nlet time = new Date();\n\nclass ClockFunction extends React.Component {\n  state = { viewMode: CLOCK_VIEW_MODES.DIGITAL };\n\n  renderAnalog = () => { \n    return (\n        <div>\n            <div  style={{backgroundColor: 'red'}}>\n                {time.toLocaleTimeString()}\n            </div>\n        </div>\n    );\n   };\n  renderDigital = () => {\n    return (\n        <div>\n            <Clock value={time} size={100}/>\n        </div>\n    );\n  };\n\n  changeViewMode = () => {\n    if (this.state.viewMode === CLOCK_VIEW_MODES.ANALOG) this.setState({ viewMode: CLOCK_VIEW_MODES.DIGITAL});\n    if (this.state.viewMode === CLOCK_VIEW_MODES.DIGITAL) this.setState({ viewMode: CLOCK_VIEW_MODES.ANALOG});\n  };\n\n  render() {\n    return (\n      <div onClick={this.changeViewMode}>\n        {this.state.viewMode === CLOCK_VIEW_MODES.ANALOG && this.renderAnalog()}\n        {this.state.viewMode === CLOCK_VIEW_MODES.DIGITAL && this.renderDigital()}\n      </div>\n    );\n  }\n\n}\n\nexport default ClockFunction;\n"]},"metadata":{},"sourceType":"module"}