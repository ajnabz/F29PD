{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/shareChart.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Bar } from \"react-chartjs-2\";\nimport html2canvas from \"html2canvas\";\n\nconst pdfConverter = require(\"jspdf\");\n\nconst chartData = [0, 1, 5, 10, 10, 10, 18, 30, 45, 40, 33, 22, 10, 10, 10, 10, 10, 20, 33, 45, 42, 55, 30, 23];\n\nclass Chart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cData = {\n      labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n      datasets: [{\n        label: 'kWh',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chartData\n      }]\n    };\n\n    this.div2PDF = e => {\n      /////////////////////////////\n      // Hide/show button if you need\n      /////////////////////////////\n      const but = e.target;\n      but.style.display = \"none\";\n      let input = window.document.getElementsByClassName(\"div2PDF\")[0];\n      html2canvas(input).then(canvas => {\n        const img = canvas.toDataURL(\"image/png\");\n        const pdf = new pdfConverter(\"l\", \"pt\");\n        pdf.addImage(img, \"png\", input.offsetLeft, input.offsetTop, input.clientWidth, input.clientHeight);\n        pdf.save(\"chart.pdf\");\n        but.style.display = \"block\";\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div2PDF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.cData,\n      options: {\n        title: {\n          display: true,\n          text: \"Chart to PDF Demo\",\n          fontSize: 32\n        },\n        legend: {\n          display: true,\n          position: \"right\"\n        }\n      },\n      height: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.div2PDF(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Export 2 PDF\")));\n  }\n\n}\n\nexport default Chart;\nReactDOM.render(React.createElement(Chart, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/shareChart.js"],"names":["React","Component","ReactDOM","Bar","html2canvas","pdfConverter","require","chartData","Chart","cData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","div2PDF","e","but","target","style","display","input","window","document","getElementsByClassName","then","canvas","img","toDataURL","pdf","addImage","offsetLeft","offsetTop","clientWidth","clientHeight","save","render","title","text","fontSize","legend","position","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Bar } from \"react-chartjs-2\";\nimport html2canvas from \"html2canvas\";\nconst pdfConverter = require(\"jspdf\");\n\nconst chartData = [0, 1, 5, 10, 10, 10, 18, 30, 45, 40, 33, 22, 10, 10, 10, 10, 10, 20, 33, 45, 42, 55, 30, 23];\n\nclass Chart extends Component {\n  cData = {\n    labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n    datasets: [\n      {\n        label: 'kWh',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chartData\n      }\n    ]\n  };\n\n\n  div2PDF = e => {\n    /////////////////////////////\n    // Hide/show button if you need\n    /////////////////////////////\n\n    const but = e.target;\n    but.style.display = \"none\";\n    let input = window.document.getElementsByClassName(\"div2PDF\")[0];\n\n    html2canvas(input).then(canvas => {\n      const img = canvas.toDataURL(\"image/png\");\n      const pdf = new pdfConverter(\"l\", \"pt\");\n      pdf.addImage(\n        img,\n        \"png\",\n        input.offsetLeft,\n        input.offsetTop,\n        input.clientWidth,\n        input.clientHeight\n      );\n      pdf.save(\"chart.pdf\");\n      but.style.display = \"block\";\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"div2PDF\">\n          <Bar\n            data={this.cData}\n            options={{\n              title: {\n                display: true,\n                text: \"Chart to PDF Demo\",\n                fontSize: 32\n              },\n              legend: {\n                display: true,\n                position: \"right\"\n              }\n            }}\n            height={200}\n          />\n        </div>\n        <div>\n          <button onClick={e => this.div2PDF(e)}>Export 2 PDF</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}