{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Desktop/f29pd/src/components/devicesMap.js\";\nimport React from 'react';\n\nclass devicesMap extends React.Component {\n  constructor(props) {\n    super(props);\n    const node = {};\n    this.state = {\n      node\n    };\n  }\n\n  componentDidMount() {\n    Node.getNode(this.props.node_id).then(result => {\n      console.log(result.data);\n      this.setState(() => ({\n        node: result.data\n      }));\n    }).catch(function (error) {// TODO: handle error\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.state.node.node_status.name);\n  }\n\n}\n\n;\nexport default devicesMap;","map":{"version":3,"sources":["/Users/abbieprescott/Desktop/f29pd/src/components/devicesMap.js"],"names":["React","devicesMap","Component","constructor","props","node","state","componentDidMount","Node","getNode","node_id","then","result","console","log","data","setState","catch","error","render","node_status","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,IAAI,GAAG,EAAb;AAEA,SAAKC,KAAL,GAAa;AACXD,MAAAA;AADW,KAAb;AAGD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,IAAI,CAACC,OAAL,CAAa,KAAKL,KAAL,CAAWM,OAAxB,EAAiCC,IAAjC,CAAuCC,MAAD,IAAY;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;AACA,WAAKC,QAAL,CAAc,OAAO;AAACX,QAAAA,IAAI,EAAEO,MAAM,CAACG;AAAd,OAAP,CAAd;AACD,KAHD,EAGGE,KAHH,CAGS,UAASC,KAAT,EAAgB,CACvB;AACD,KALD;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKb,KAAL,CAAWD,IAAX,CAAgBe,WAAhB,CAA4BC,IAD/B,CADF;AAKD;;AAzBoC;;AA0BtC;AAED,eAAepB,UAAf","sourcesContent":["import React from 'react';\n\nclass devicesMap extends React.Component {\n    constructor(props) {\n      super(props);\n      const node = {};\n  \n      this.state = {\n        node\n      }\n    }\n  \n    componentDidMount() {\n      Node.getNode(this.props.node_id).then((result) => {\n        console.log(result.data);\n        this.setState(() => ({node: result.data}));\n      }).catch(function(error) {\n        // TODO: handle error\n      });\n    }\n  \n    render() {\n      return (\n        <div>\n          {this.state.node.node_status.name}\n        </div>\n      );\n    }\n  };\n  \n  export default devicesMap;"]},"metadata":{},"sourceType":"module"}