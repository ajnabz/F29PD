{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Desktop/f29pd/src/components/devicesMap2.js\";\nimport React from 'react';\nimport oko_api from 'https://oko-api.herokuapp.com/dwelling/';\n\nclass DevicesMap2 {\n  componentWillMount() {\n    const searchResults = oko_api.ref('rooms');\n    const location = this.props.location;\n    const instrument = this.props.instrument;\n    searchResults.orderByChild('location').equalTo(location).on('value', snap => {\n      const rooms = snap.val();\n      const profiles = Object.keys(rooms).map(key => rooms[key]); // previously we were setting just profiles[0]; but I think you need \n      // the entire list of rooms as an array to render as search results\n\n      this.setState({\n        rooms: profiles\n      }); // set the whole data to state\n    });\n  }\n\n  render() {\n    const rooms = this.state.rooms || []; // note that this.state.rooms is an array\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, rooms.length > 0 ? rooms.map(room_data => React.createElement(\"div\", {\n      room_data: room_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nexport default DevicesMap2;","map":{"version":3,"sources":["/Users/abbieprescott/Desktop/f29pd/src/components/devicesMap2.js"],"names":["React","oko_api","DevicesMap2","componentWillMount","searchResults","ref","location","props","instrument","orderByChild","equalTo","on","snap","rooms","val","profiles","Object","keys","map","key","setState","render","state","length","room_data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yCAApB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,kBAAkB,GAAE;AAChB,UAAMC,aAAa,GAAGH,OAAO,CAACI,GAAR,CAAY,OAAZ,CAAtB;AACA,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWD,QAA5B;AACA,UAAME,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B;AAEAJ,IAAAA,aAAa,CAACK,YAAd,CAA2B,UAA3B,EAAuCC,OAAvC,CAA+CJ,QAA/C,EAAyDK,EAAzD,CAA4D,OAA5D,EAAsEC,IAAD,IAAU;AAC3E,YAAMC,KAAK,GAAGD,IAAI,CAACE,GAAL,EAAd;AACA,YAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,GAAnB,CAAwBC,GAAD,IAASN,KAAK,CAACM,GAAD,CAArC,CAAjB,CAF2E,CAI3E;AACA;;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEE;AAAT,OAAd,EAN2E,CAMvC;AACvC,KAPD;AAQH;;AAGDM,EAAAA,MAAM,GAAE;AACJ,UAAMR,KAAK,GAAG,KAAKS,KAAL,CAAWT,KAAX,IAAoB,EAAlC,CADI,CACkC;;AAEtC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIA,KAAK,CAACU,MAAN,GAAe,CAAf,GACEV,KAAK,CAACK,GAAN,CAAWM,SAAD,IAAe;AAAK,MAAA,SAAS,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,CADF,GAEE,IAJN,CADJ;AASH;;AA7Ba;;AAgClB,eAAetB,WAAf","sourcesContent":["import React from 'react';\nimport oko_api from 'https://oko-api.herokuapp.com/dwelling/';\n\nclass DevicesMap2 {\n    componentWillMount(){\n        const searchResults = oko_api.ref('rooms');\n        const location = this.props.location;\n        const instrument = this.props.instrument;\n\n        searchResults.orderByChild('location').equalTo(location).on('value', (snap) => {\n            const rooms = snap.val();\n            const profiles = Object.keys(rooms).map((key) => rooms[key]);\n\n            // previously we were setting just profiles[0]; but I think you need \n            // the entire list of rooms as an array to render as search results\n            this.setState({ rooms: profiles }); // set the whole data to state\n        });\n    }\n\n\n    render(){\n        const rooms = this.state.rooms || []; // note that this.state.rooms is an array\n\n        return(\n            <div>\n                {\n                rooms.length > 0 \n                ? rooms.map((room_data) => <div room_data={room_data} />)\n                : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default DevicesMap2;"]},"metadata":{},"sourceType":"module"}