{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/ChartsPage.js\";\n//MDB REACT LIBRARY\nimport React from 'react';\nimport { Line, Pie } from 'react-chartjs-2';\nimport { MDBContainer } from 'mdbreact';\nimport SectionContainer from '../components/sectionContainer';\n\nfunction ChartsPage(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.device.map(device => {\n    const chartData = [0, 1, 5, 10, 10, 10, 18, 30, 45, 40, 33, 22, 10, 10, 10, 10, 10, 20, 33, 45, 42, 55, 30, 23]; // LineChart\n\n    const dataLine = {\n      labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n      datasets: [{\n        label: 'kWh',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: chartData\n      }]\n    }; // Pie Chart\n\n    const dataPie = {\n      labels: ['Lighting', 'Cooling and Heating', 'Washer and Dryer', 'Oven', 'Water Heater'],\n      datasets: [{\n        data: [300, 50, 100, 40, 240],\n        backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360', '#ac64ad'],\n        hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774', '#da92db']\n      }]\n    };\n    let device_code = device.device_code;\n\n    if (device_code === \"ABC-XYZ_1_1\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(MDBContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Used so far today: 51 kWh\"), React.createElement(SectionContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: dataLine,\n        options: {\n          responsive: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Devices used today\"), React.createElement(SectionContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: dataPie,\n        options: {\n          responsive: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))))));\n    }\n  }));\n}\n\nexport default ChartsPage; //most popular usage for top 2 rooms","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/ChartsPage.js"],"names":["React","Line","Pie","MDBContainer","SectionContainer","ChartsPage","props","device","map","chartData","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","dataPie","hoverBackgroundColor","device_code","color","responsive"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEzB,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBD,MAAM,IAAI;AAE1B,UAAME,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,EAAtD,EAA0D,EAA1D,EAA8D,EAA9D,EAAkE,EAAlE,EAAsE,EAAtE,EAA0E,EAA1E,EAA8E,EAA9E,EAAkF,EAAlF,EAAsF,EAAtF,EAA0F,EAA1F,CAAlB,CAF0B,CAI1B;;AACA,UAAMC,QAAQ,GAAG;AACfC,MAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8C,OAA9C,EAAuD,OAAvD,EAAgE,OAAhE,EAAyE,OAAzE,EAAkF,OAAlF,EAA2F,OAA3F,EAAoG,OAApG,EAA6G,OAA7G,EAAsH,OAAtH,EAA+H,OAA/H,EAAwI,OAAxI,EAAiJ,OAAjJ,EAA0J,OAA1J,EAAmK,OAAnK,EAA4K,OAA5K,EAAqL,OAArL,EAA8L,OAA9L,EAAuM,OAAvM,EAAgN,OAAhN,CADO;AAEfC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,KADT;AAEEC,QAAAA,IAAI,EAAE,KAFR;AAGEC,QAAAA,WAAW,EAAE,GAHf;AAIEC,QAAAA,eAAe,EAAE,sBAJnB;AAKEC,QAAAA,WAAW,EAAE,oBALf;AAMEC,QAAAA,cAAc,EAAE,MANlB;AAOEC,QAAAA,UAAU,EAAE,EAPd;AAQEC,QAAAA,gBAAgB,EAAE,GARpB;AASEC,QAAAA,eAAe,EAAE,OATnB;AAUEC,QAAAA,gBAAgB,EAAE,oBAVpB;AAWEC,QAAAA,oBAAoB,EAAE,MAXxB;AAYEC,QAAAA,gBAAgB,EAAE,CAZpB;AAaEC,QAAAA,gBAAgB,EAAE,CAbpB;AAcEC,QAAAA,yBAAyB,EAAE,oBAd7B;AAeEC,QAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,QAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,QAAAA,WAAW,EAAE,CAjBf;AAkBEC,QAAAA,cAAc,EAAE,EAlBlB;AAmBEC,QAAAA,IAAI,EAAEtB;AAnBR,OADQ;AAFK,KAAjB,CAL0B,CAgC1B;;AACA,UAAMuB,OAAO,GAAG;AACdrB,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,qBAAb,EAAoC,kBAApC,EAAwD,MAAxD,EAAgE,cAAhE,CADM;AAEdC,MAAAA,QAAQ,EAAE,CACR;AACEmB,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,EAAe,EAAf,EAAmB,GAAnB,CADR;AAEEf,QAAAA,eAAe,EAAE,CACf,SADe,EAEf,SAFe,EAGf,SAHe,EAIf,SAJe,EAKf,SALe,EAMf,SANe,CAFnB;AAUEiB,QAAAA,oBAAoB,EAAE,CACpB,SADoB,EAEpB,SAFoB,EAGpB,SAHoB,EAIpB,SAJoB,EAKpB,SALoB,EAMpB,SANoB;AAVxB,OADQ;AAFI,KAAhB;AAyBA,QAAIC,WAAW,GAAG3B,MAAM,CAAC2B,WAAzB;;AAEA,QAAGA,WAAW,KAAK,aAAnB,EAAiC;AACjC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,EAGE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEzB,QAAZ;AAAsB,QAAA,OAAO,EAAE;AAAE0B,UAAAA,UAAU,EAAE;AAAd,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAHF,CAFF,EASE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAEH,OAAX;AAAoB,QAAA,OAAO,EAAE;AAAEI,UAAAA,UAAU,EAAE;AAAd,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CATF,CAFF,CADF,CADF;AAuBC;AACF,GArFA,CADH,CAFF;AA2FD;;AAED,eAAe/B,UAAf,C,CAEA","sourcesContent":["//MDB REACT LIBRARY\nimport React from 'react';\nimport { Line, Pie } from 'react-chartjs-2';\nimport { MDBContainer } from 'mdbreact';\nimport SectionContainer from '../components/sectionContainer';\n\n\nfunction ChartsPage(props) {\n\n  return (\n\n    <div>\n      {props.device.map(device => {\n\n        const chartData = [0, 1, 5, 10, 10, 10, 18, 30, 45, 40, 33, 22, 10, 10, 10, 10, 10, 20, 33, 45, 42, 55, 30, 23];\n\n        // LineChart\n        const dataLine = {\n          labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n          datasets: [\n            {\n              label: 'kWh',\n              fill: false,\n              lineTension: 0.1,\n              backgroundColor: 'rgba(75,192,192,0.4)',\n              borderColor: 'rgba(75,192,192,1)',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'miter',\n              pointBorderColor: 'rgba(75,192,192,1)',\n              pointBackgroundColor: '#fff',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: chartData\n            }\n          ]\n        };\n\n        // Pie Chart\n        const dataPie = {\n          labels: ['Lighting', 'Cooling and Heating', 'Washer and Dryer', 'Oven', 'Water Heater'],\n          datasets: [\n            {\n              data: [300, 50, 100, 40, 240],\n              backgroundColor: [\n                '#F7464A',\n                '#46BFBD',\n                '#FDB45C',\n                '#949FB1',\n                '#4D5360',\n                '#ac64ad'\n              ],\n              hoverBackgroundColor: [\n                '#FF5A5E',\n                '#5AD3D1',\n                '#FFC870',\n                '#A8B3C5',\n                '#616774',\n                '#da92db'\n              ]\n            }\n          ]\n        };\n\n        let device_code = device.device_code;\n\n        if(device_code === \"ABC-XYZ_1_1\"){\n        return (\n          <div>\n            <MDBContainer>\n\n              <div className=\"row\">\n\n                <div className=\"col-md-6\">\n\n                  <h3 style={{ color: 'black' }}>Used so far today: 51 kWh</h3>\n                  <SectionContainer>\n                    <Line data={dataLine} options={{ responsive: true }} />\n                  </SectionContainer>\n                </div>\n                <div className=\"col-md-6\">\n                  <h3 style={{ color: 'black' }}>Devices used today</h3>\n                  <SectionContainer>\n                    <Pie data={dataPie} options={{ responsive: true }} />\n                  </SectionContainer>\n                </div>\n              </div>\n            </MDBContainer>\n          </div>\n        );\n        }\n      })}\n    </div>\n  );\n}\n\nexport default ChartsPage;\n\n//most popular usage for top 2 rooms\n"]},"metadata":{},"sourceType":"module"}