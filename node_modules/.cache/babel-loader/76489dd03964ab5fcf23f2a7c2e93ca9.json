{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/usageOnClick.js\";\nimport React from 'react';\nimport { MDBBtn, MDBBtnGroup } from 'mdbreact';\nconst USAGE_VIEW_MODES = {\n  TEXT: 'Todays Usage',\n  VALUE: 'Usage'\n};\n\nclass UsageOnClick extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      viewMode: USAGE_VIEW_MODES.TEXT\n    };\n\n    this.renderText = () => {\n      return React.createElement(MDBBtnGroup, {\n        size: \"lg\",\n        className: \"sidebarButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#030C49'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Todays Usage\")));\n    };\n\n    this.renderValue = () => {\n      return React.createElement(MDBBtnGroup, {\n        size: \"lg\",\n        className: \"sidebarButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#030C49'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"51 kWh\")));\n    };\n\n    this.changeViewMode = () => {\n      if (this.state.viewMode === USAGE_VIEW_MODES.VALUE) this.setState({\n        viewMode: USAGE_VIEW_MODES.TEXT\n      });\n      if (this.state.viewMode === USAGE_VIEW_MODES.TEXT) this.setState({\n        viewMode: USAGE_VIEW_MODES.VALUE\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      this.setState({\n        time: new Date()\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.changeViewMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.viewMode === USAGE_VIEW_MODES.TEXT && this.renderText(), this.state.viewMode === USAGE_VIEW_MODES.VALUE && this.renderValue());\n  }\n\n}\n\nexport default UsageOnClick;","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/usageOnClick.js"],"names":["React","MDBBtn","MDBBtnGroup","USAGE_VIEW_MODES","TEXT","VALUE","UsageOnClick","Component","state","viewMode","renderText","color","renderValue","changeViewMode","setState","componentDidMount","intervalId","setInterval","time","Date","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,UAApC;AAEA,MAAMC,gBAAgB,GAAG;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CAAzB;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,QAAQ,EAAEN,gBAAgB,CAACC;AAA7B,KAD+B;;AAAA,SAGvCM,UAHuC,GAG1B,MAAM;AACf,aACI,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,IAAlB;AAAuB,QAAA,SAAS,EAAC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADN,CADJ;AAOH,KAXsC;;AAAA,SAavCC,WAbuC,GAazB,MAAM;AAChB,aAAQ,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,IAAlB;AAAuB,QAAA,SAAS,EAAC,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACR,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CADQ,CAAR;AAMH,KApBsC;;AAAA,SAsBvCE,cAtBuC,GAsBtB,MAAM;AACnB,UAAI,KAAKL,KAAL,CAAWC,QAAX,KAAwBN,gBAAgB,CAACE,KAA7C,EAAoD,KAAKS,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEN,gBAAgB,CAACC;AAA7B,OAAd;AACpD,UAAI,KAAKI,KAAL,CAAWC,QAAX,KAAwBN,gBAAgB,CAACC,IAA7C,EAAmD,KAAKU,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEN,gBAAgB,CAACE;AAA7B,OAAd;AACtD,KAzBsC;AAAA;;AA2BvCU,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAClC,WAAKH,QAAL,CAAc;AACZI,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AADM,OAAd;AAGD,KAJ4B,EAI1B,IAJ0B,CAA7B;AAKD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKL,UAAN,CAAb;AACD;;AAEHM,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,OAAO,EAAE,KAAKT,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWC,QAAX,KAAwBN,gBAAgB,CAACC,IAAzC,IAAiD,KAAKM,UAAL,EADtD,EAEK,KAAKF,KAAL,CAAWC,QAAX,KAAwBN,gBAAgB,CAACE,KAAzC,IAAkD,KAAKO,WAAL,EAFvD,CADJ;AAMH;;AA9CsC;;AAkD3C,eAAeN,YAAf","sourcesContent":["import React from 'react';\nimport { MDBBtn, MDBBtnGroup } from 'mdbreact';\n\nconst USAGE_VIEW_MODES = { TEXT: 'Todays Usage', VALUE: 'Usage' };\n\nclass UsageOnClick extends React.Component {\n    state = { viewMode: USAGE_VIEW_MODES.TEXT };\n\n    renderText = () => {\n        return (\n            <MDBBtnGroup size='lg' className=\"sidebarButtons\">\n                  <MDBBtn color='danger'>\n                  <span style={{ color: '#030C49' }}>Todays Usage</span>\n                  </MDBBtn>\n                </MDBBtnGroup>\n        );\n    };\n\n    renderValue = () => {\n        return (<MDBBtnGroup size='lg' className=\"sidebarButtons\">\n        <MDBBtn color='danger'>\n        <span style={{ color: '#030C49'}}>51 kWh</span>\n        </MDBBtn>\n      </MDBBtnGroup>\n        );\n    };\n\n    changeViewMode = () => {\n        if (this.state.viewMode === USAGE_VIEW_MODES.VALUE) this.setState({ viewMode: USAGE_VIEW_MODES.TEXT });\n        if (this.state.viewMode === USAGE_VIEW_MODES.TEXT) this.setState({ viewMode: USAGE_VIEW_MODES.VALUE });\n    };\n\n    componentDidMount() {\n        this.intervalId = setInterval(() => {\n          this.setState({\n            time: new Date()\n          });\n        }, 1000);\n      }\n\n      componentWillUnmount() {\n        clearInterval(this.intervalId);\n      }\n\n    render() {\n        return (\n            <div onClick={this.changeViewMode}>\n                {this.state.viewMode === USAGE_VIEW_MODES.TEXT && this.renderText()}\n                {this.state.viewMode === USAGE_VIEW_MODES.VALUE && this.renderValue()}\n            </div>\n        );\n    }\n\n}\n\nexport default UsageOnClick;\n"]},"metadata":{},"sourceType":"module"}