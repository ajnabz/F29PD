{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/userInput.js\";\nimport React, { Component } from 'react';\nimport '../index.css';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport RegisterDwelling from './RegisterDwelling';\nimport { withCookies } from 'react-cookie';\nimport { MDBContainer, MDBCollapse } from 'mdbreact';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      credentials: {\n        goal: ''\n      },\n      isLoginView: true\n    };\n\n    this.toggleCollapse = collapseID => () => {\n      this.setState(prevState => ({\n        collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n      }));\n    };\n\n    this.inputChanged = event => {\n      let cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n    };\n\n    this.login = event => {\n      if (this.state.isLoginView) {\n        console.log(this.state.credentials);\n        fetch('${#', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.state.credentials)\n        }).then(res => {\n          console.log(res.token);\n          this.props.cookies.set('token', res.token);\n          window.location.href = \"/Oko/\";\n        }).catch(error => console.log(error));\n      } else {\n        console.log(this.state.credentials);\n        fetch('${#', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.state.credentials)\n        }).then(res => {\n          this.setState({\n            isLoginView: true\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n  }\n\n  render() {\n    const {\n      collapseID\n    } = this.state;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"goal\",\n      value: this.state.credentials.goal,\n      onChange: this.inputChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/userInput.js"],"names":["React","Component","Tabs","Tab","RegisterDwelling","withCookies","MDBContainer","MDBCollapse","Login","state","credentials","goal","isLoginView","toggleCollapse","collapseID","setState","prevState","inputChanged","event","cred","target","name","value","login","console","log","fetch","method","headers","body","JSON","stringify","then","res","token","props","cookies","set","window","location","href","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../index.css';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport RegisterDwelling from './RegisterDwelling';\nimport { withCookies } from 'react-cookie';\nimport { MDBContainer, MDBCollapse } from 'mdbreact';\n\nclass Login extends Component {\n\n    state = {\n        credentials: {\n            goal: ''\n        },\n        isLoginView: true\n    }\n\n    toggleCollapse = collapseID => () => {\n        this.setState(prevState => ({\n            collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n        }));\n    };\n\n\n    inputChanged = event => {\n        let cred = this.state.credentials;\n        cred[event.target.name] = event.target.value;\n        this.setState({ credentials: cred });\n    }\n\n    login = event => {\n        if (this.state.isLoginView) {\n            console.log(this.state.credentials);\n            fetch('${#', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(this.state.credentials)\n            }).then(res => {\n                console.log(res.token);\n                this.props.cookies.set('token', res.token);\n                window.location.href = \"/Oko/\"\n            })\n                .catch(error => console.log(error))\n        } else {\n            console.log(this.state.credentials);\n            fetch('${#', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(this.state.credentials)\n            }).then(res => {\n                this.setState({ isLoginView: true });\n            })\n                .catch(error => console.log(error))\n        }\n\n    }\n\n    render() {\n        const { collapseID } = this.state;\n        return (\n\n            <React.Fragment>\n                <input type=\"text\" name=\"goal\" value={this.state.credentials.goal} onChange={this.inputChanged} /><br />\n                <button onClick={this.login}>\n                    Submit\n                </button>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}