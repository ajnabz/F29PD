{"ast":null,"code":"import React from'react';import{Nav,Tabs,Tab,Card,Row,Col,ListGroup,Button,Form,ButtonGroup,Badge,OverlayTrigger,ListGroupItem}from'react-bootstrap';import{Line}from'react-chartjs-2';import{MDBContainer}from'mdbreact';import SectionContainer from'./sectionContainer';function RoomCard(props){return React.createElement(\"div\",null,props.room.map(function(room){var dataSet_temperature=room.data[0].temperature;var dataArray_temperature=dataSet_temperature.split(',',24);var dataSet_humidity=room.data[0].humidity;var dataArray_humidity=dataSet_humidity.split(',',24);var dataLine={labels:['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00','12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'],datasets:[{label:'temperature',fill:false,lineTension:0.1,backgroundColor:'rgba(75,192,192,0.4)',borderColor:'rgba(75,192,192,1)',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'rgba(75,192,192,1)',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'rgba(75,192,192,1)',pointHoverBorderColor:'rgba(220,220,220,1)',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:dataArray_temperature},{label:'humidity',fill:false,lineTension:0.1,backgroundColor:'rgba(231, 76, 60)',borderColor:'rgba(231, 76, 60)',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'rgba(231, 76, 60)',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'rgba(231, 76, 60)',pointHoverBorderColor:'rgba(220,220,220,1)',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:dataArray_humidity}]};var suggestions=room.suggestion[0].suggestion;return React.createElement(React.Fragment,null,React.createElement(Card,{style:{width:'100%'}},React.createElement(Card.Body,null,React.createElement(Card.Title,{key:room.name},room.room_name),React.createElement(Card.Subtitle,{className:\"mb-2 text-muted\"}),React.createElement(\"div\",{style:{position:'absolute',right:0,marginRight:'7vw'}},React.createElement(Badge,{variant:\"success\"},\"Suggestions based on your data:\"),React.createElement(\"p\",null,suggestions)),React.createElement(Card.Text,null,React.createElement(Tabs,{defaultActiveKey:\"data\",transition:false,id:\"noanim-tab-example\"},React.createElement(Tab,{eventKey:\"data\",title:\"Data\"},React.createElement(\"br\",null),React.createElement(MDBContainer,null,React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-lg-6\"},React.createElement(SectionContainer,null,React.createElement(Line,{data:dataLine,options:{responsive:true}})))))),React.createElement(Tab,{eventKey:\"Devices\",title:\"Devices\"},React.createElement(ListGroup,null,React.createElement(\"br\",null),React.createElement(ListGroup.Item,{key:room.device_name},React.createElement(\"span\",{style:{fontSize:'1.5em'}},room.devices[0].device_name),React.createElement(Tab.Container,{id:\"list-group-tabs-example\",defaultActiveKey:\"#link2\"},React.createElement(Nav,{variant:\"pills\",defaultActiveKey:\"/home\"},React.createElement(Nav.Item,null,React.createElement(Nav.Link,{href:\"#link0\"},\"Delete\")),React.createElement(Nav.Item,null,React.createElement(Nav.Link,{eventKey:\"#link1\"},\"Change Name\"))),React.createElement(\"br\",null),React.createElement(Tab.Content,null,React.createElement(Tab.Pane,{eventKey:\"#link0\"},React.createElement(\"p\",null,\"Once deleted, the data connected to this device will be lost.\"),React.createElement(Button,null,\"Delete\")),React.createElement(Tab.Pane,{eventKey:\"#link1\"},React.createElement(Form,null,React.createElement(Form.Group,{controlId:\"formBasicEmail\"},React.createElement(Form.Control,{type:\"name\",placeholder:\"Enter a new device name\"}),React.createElement(Form.Text,{className:\"text-muted\"},\" This will be the new name given to the room from now on. \"))),React.createElement(Button,null,\"Save\"))))),React.createElement(ListGroup.Item,null,React.createElement(ButtonGroup,{size:\"md\"},React.createElement(\"a\",{href:\"/Oko/Devices\"},React.createElement(Button,null,\"View all devices\")),React.createElement(\"a\",null,React.createElement(Button,null,\"Add Device to Room\")))))),React.createElement(Tab,{eventKey:\"Manage Room\",title:\"Manage Room\"},React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(Tab.Container,{id:\"list-group-tabs-example\",defaultActiveKey:\"#link1\"},React.createElement(Row,null,React.createElement(Col,{sm:4},React.createElement(ListGroup,null,React.createElement(ListGroupItem,{action:true,href:\"#link2\"},\"Delete Room\"),React.createElement(ListGroupItem,{action:true,href:\"#link3\"},\"Change Room Name\"))),React.createElement(Col,{sm:8},React.createElement(Tab.Content,null,React.createElement(Tab.Pane,{eventKey:\"#link2\"},React.createElement(\"h4\",null,\"Are you sure you want to delete \\\"\",room.room_name,\"\\\"?\"),React.createElement(\"p\",null,\"Once deleted, the devices and data connected to this room will be lost.\"),React.createElement(\"br\",null),React.createElement(Button,null,\"Delete\")),React.createElement(Tab.Pane,{eventKey:\"#link3\"},React.createElement(\"h4\",null,\"Change Room Name\"),React.createElement(\"p\",null,\"Change name from:\\\"\",room.room_name,\"\\\" to:\"),React.createElement(Form,null,React.createElement(Form.Group,{controlId:\"formBasicEmail\"},React.createElement(Form.Control,{type:\"name\",placeholder:\"Enter a new room name\"}),React.createElement(Form.Text,{className:\"text-muted\"},\" This will be the new name given to the room from now on. \"))),React.createElement(Button,null,\"Save\"))))))))))),React.createElement(\"br\",null));}));}export default RoomCard;","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/roomCard.js"],"names":["React","Nav","Tabs","Tab","Card","Row","Col","ListGroup","Button","Form","ButtonGroup","Badge","OverlayTrigger","ListGroupItem","Line","MDBContainer","SectionContainer","RoomCard","props","room","map","dataSet_temperature","data","temperature","dataArray_temperature","split","dataSet_humidity","humidity","dataArray_humidity","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","suggestions","suggestion","width","name","room_name","position","right","marginRight","responsive","device_name","fontSize","devices"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Nav, Tabs, Tab, Card, Row, Col, ListGroup, Button, Form, ButtonGroup, Badge, OverlayTrigger, ListGroupItem } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\nimport { MDBContainer } from 'mdbreact';\nimport SectionContainer from './sectionContainer';\n\nfunction RoomCard(props) {\n\n    return (\n\n        <div>\n            {props.room.map(room => {\n\n                let dataSet_temperature = room.data[0].temperature;\n                var dataArray_temperature = dataSet_temperature.split(',', 24);\n\n                let dataSet_humidity = room.data[0].humidity;\n                var dataArray_humidity = dataSet_humidity.split(',', 24);\n                \n\n                const dataLine = {\n                    labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n                    datasets: [\n                        {\n                            label: 'temperature',\n                            fill: false,\n                            lineTension: 0.1,\n                            backgroundColor: 'rgba(75,192,192,0.4)',\n                            borderColor: 'rgba(75,192,192,1)',\n                            borderCapStyle: 'butt',\n                            borderDash: [],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            pointBorderColor: 'rgba(75,192,192,1)',\n                            pointBackgroundColor: '#fff',\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                            pointHoverBorderColor: 'rgba(220,220,220,1)',\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 1,\n                            pointHitRadius: 10,\n                            data: dataArray_temperature\n                        },\n                        {\n                            label: 'humidity',\n                            fill: false,\n                            lineTension: 0.1,\n                            backgroundColor: 'rgba(231, 76, 60)',\n                            borderColor: 'rgba(231, 76, 60)',\n                            borderCapStyle: 'butt',\n                            borderDash: [],\n                            borderDashOffset: 0.0,\n                            borderJoinStyle: 'miter',\n                            pointBorderColor: 'rgba(231, 76, 60)',\n                            pointBackgroundColor: '#fff',\n                            pointBorderWidth: 1,\n                            pointHoverRadius: 5,\n                            pointHoverBackgroundColor: 'rgba(231, 76, 60)',\n                            pointHoverBorderColor: 'rgba(220,220,220,1)',\n                            pointHoverBorderWidth: 2,\n                            pointRadius: 1,\n                            pointHitRadius: 10,\n                            data: dataArray_humidity\n                        }\n                    ]\n                };\n\n                let suggestions = room.suggestion[0].suggestion;\n\n                return (\n\n                    <React.Fragment>\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Card.Title key={room.name}>{room.room_name}</Card.Title>\n                                <Card.Subtitle className=\"mb-2 text-muted\">\n                                </Card.Subtitle>\n                                <div style={{ position: 'absolute', right: 0, marginRight: '7vw' }}>\n                                    <Badge variant=\"success\">Suggestions based on your data:</Badge>\n                                    <p>{suggestions}</p>\n                                </div>\n                                <Card.Text>\n                                    <Tabs defaultActiveKey=\"data\" transition={false} id=\"noanim-tab-example\">\n                                        <Tab eventKey=\"data\" title=\"Data\">\n                                            <br></br>\n                                            <MDBContainer>\n                                                <div className=\"row\">\n                                                    <div className=\"col-lg-6\">\n                                                        <SectionContainer>\n                                                            <Line data={dataLine} options={{ responsive: true }} />\n                                                        </SectionContainer>\n                                                    </div>\n                                                </div>\n                                            </MDBContainer>\n                                        </Tab>\n                                        <Tab eventKey=\"Devices\" title=\"Devices\">\n                                            <ListGroup>\n                                                <br></br>\n                                                <ListGroup.Item key={room.device_name}><span style={{fontSize: '1.5em'}}>{room.devices[0].device_name}</span>\n                                                     <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link2\">\n                                                        <Nav variant=\"pills\" defaultActiveKey=\"/home\">\n                                                            <Nav.Item>\n                                                                <Nav.Link href=\"#link0\">Delete</Nav.Link>\n                                                            </Nav.Item>\n                                                            <Nav.Item>\n                                                                <Nav.Link eventKey=\"#link1\">Change Name</Nav.Link>\n                                                            </Nav.Item>\n                                                        </Nav>\n                                                        <br></br>\n                                                        <Tab.Content>\n                                                            <Tab.Pane eventKey=\"#link0\">\n                                                                <p>Once deleted, the data connected to this device will be lost.</p>\n                                                                <Button>Delete</Button>\n                                                            </Tab.Pane>\n                                                            <Tab.Pane eventKey=\"#link1\">\n                                                                <Form>\n                                                                    <Form.Group controlId=\"formBasicEmail\">\n                                                                        <Form.Control type=\"name\" placeholder=\"Enter a new device name\" />\n                                                                        <Form.Text className=\"text-muted\"> This will be the new name given to the room from now on. </Form.Text>\n                                                                    </Form.Group>\n                                                                </Form>\n                                                                <Button>Save</Button>\n                                                            </Tab.Pane>\n                                                        </Tab.Content>\n                                                    </Tab.Container>\n                                                </ListGroup.Item>\n                                                <ListGroup.Item>\n                                                    <ButtonGroup size=\"md\">\n                                                        <a href=\"/Oko/Devices\"><Button>View all devices</Button></a>\n                                                        <a><Button>Add Device to Room</Button></a>\n                                                    </ButtonGroup>\n                                                </ListGroup.Item>\n                                            </ListGroup>\n                                        </Tab>\n        \n                                        <Tab eventKey=\"Manage Room\" title=\"Manage Room\">\n                                            <br></br>\n                                            <br></br>\n                                            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\n                                               <Row>\n                                                    <Col sm={4}>\n                                                        <ListGroup>\n                                                            <ListGroupItem action href=\"#link2\">Delete Room</ListGroupItem>\n                                                            <ListGroupItem action href=\"#link3\">Change Room Name</ListGroupItem>\n\n                                                        </ListGroup>\n                                                    </Col>\n                                                    <Col sm={8}>\n                                                        <Tab.Content>\n\n                                                            <Tab.Pane eventKey=\"#link2\">\n                                                                <h4>Are you sure you want to delete \"{room.room_name}\"?</h4>\n                                                                <p>Once deleted, the devices and data connected to this room will be lost.</p>\n                                                                <br></br>\n                                                                <Button>Delete</Button>\n                                                            </Tab.Pane>\n                                                            <Tab.Pane eventKey=\"#link3\">\n                                                                <h4>Change Room Name</h4>\n                                                                <p>Change name from:\"{room.room_name}\" to:</p>\n                                                                <Form>\n                                                                    <Form.Group controlId=\"formBasicEmail\">\n                                                                        <Form.Control type=\"name\" placeholder=\"Enter a new room name\" />\n                                                                        <Form.Text className=\"text-muted\"> This will be the new name given to the room from now on. </Form.Text>\n                                                                    </Form.Group>\n                                                                </Form>\n                                                                <Button>Save</Button>\n                                                            </Tab.Pane>\n                                                        </Tab.Content>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Container>\n\n\n                                        </Tab>\n                                    </Tabs>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                        <br></br>\n                    </React.Fragment>\n                )\n            })}\n        </div>\n\n    )\n}\nexport default RoomCard;\n"]},"metadata":{},"sourceType":"module"}