{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/AddRoomModal.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport Form from 'react-bootstrap/Form';\n\nfunction ReturnRoom(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.room.map(room => {\n    const code = room.room_code;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }));\n}\n\nclass AddRoom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      credentials: {\n        room_name: '',\n        room_code: ''\n      }\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.inputChanged = event => {\n      let cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n\n      if (this.room_code === ReturnRoom(code)) {}\n    };\n\n    this.login = event => {\n      if (this.state.isLoginView) {\n        console.log(this.state.credentials);\n        fetch('oko-api.herokuapp.com/account/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.state.credentials)\n        }).then(res => {\n          console.log(res.token);\n          this.props.cookies.set('token', res.token);\n          window.location.href = \"/Oko/\";\n        }).catch(error => console.log(error));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Add a New Room\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggle,\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Add Room\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Room Name\"), React.createElement(Form.Control, {\n      type: \"name\",\n      placeholder: \"Example device\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Save changes\"))));\n  }\n\n}\n\nexport default AddRoom;","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/AddRoomModal.js"],"names":["React","Component","MDBContainer","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","Form","ReturnRoom","props","room","map","code","room_code","AddRoom","state","modal","credentials","room_name","toggle","setState","inputChanged","event","cred","target","name","value","login","isLoginView","console","log","fetch","method","headers","body","JSON","stringify","then","res","token","cookies","set","window","location","href","catch","error","render","color"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,QAA/B,EAAyCC,YAAzC,EAAuDC,cAAvD,EAAuEC,cAAvE,QAA6F,UAA7F;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeD,IAAI,IAAI;AACtB,UAAME,IAAI,GAAGF,IAAI,CAACG,SAAlB;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GAPA,CADH,CAFF;AAaD;;AAED,MAAMC,OAAN,SAAsBd,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9Be,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,KADD;AAENC,MAAAA,WAAW,EAAE;AACXC,QAAAA,SAAS,EAAE,EADA;AAEXL,QAAAA,SAAS,EAAE;AAFA;AAFP,KADsB;;AAAA,SAS9BM,MAT8B,GASrB,MAAM;AACb,WAAKC,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADP,OAAd;AAGD,KAb6B;;AAAA,SAe9BK,YAf8B,GAefC,KAAK,IAAI;AACtB,UAAIC,IAAI,GAAG,KAAKR,KAAL,CAAWE,WAAtB;AACAM,MAAAA,IAAI,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,CAAJ,GAA0BH,KAAK,CAACE,MAAN,CAAaE,KAAvC;AACA,WAAKN,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAEM;AAAf,OAAd;;AACA,UAAG,KAAKV,SAAL,KAAiBL,UAAU,CAACI,IAAD,CAA9B,EAAqC,CAEpC;AACF,KAtB6B;;AAAA,SAwB9Be,KAxB8B,GAwBtBL,KAAK,IAAI;AACf,UAAI,KAAKP,KAAL,CAAWa,WAAf,EAA4B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWE,WAAvB;AACAc,QAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC5CC,UAAAA,MAAM,EAAE,MADoC;AAE5CC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFmC;AAG5CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKrB,KAAL,CAAWE,WAA1B;AAHsC,SAA3C,CAAL,CAIGoB,IAJH,CAIQC,GAAG,IAAI;AACXT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACC,KAAhB;AACA,eAAK9B,KAAL,CAAW+B,OAAX,CAAmBC,GAAnB,CAAuB,OAAvB,EAAgCH,GAAG,CAACC,KAApC;AACAG,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,OAAvB;AACH,SARD,EASKC,KATL,CASWC,KAAK,IAAIjB,OAAO,CAACC,GAAR,CAAYgB,KAAZ,CATpB;AAUH;AACF,KAtC6B;AAAA;;AAwC9BC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAK5B,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWC,KAA7B;AAAoC,MAAA,MAAM,EAAE,KAAKG,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKA,MAA7B;AAAqC,MAAA,KAAK,EAAE;AAAE6B,QAAAA,KAAK,EAAE;AAAT,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,2BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,WAAW,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CAFF,EAUE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,KAAK7B,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CAVF,CAFF,CADF;AAoBD;;AA7D6B;;AAgEhC,eAAeL,OAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport Form from 'react-bootstrap/Form'\n\nfunction ReturnRoom(props) {\n  return (\n\n    <div>\n      {props.room.map(room => {\n        const code = room.room_code;\n        return(\n          <React.Fragment>\n            \n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\n\nclass AddRoom extends Component {\n  state = {\n    modal: false,\n    credentials: {\n      room_name: '',\n      room_code: ''\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  inputChanged = event => {\n    let cred = this.state.credentials;\n    cred[event.target.name] = event.target.value;\n    this.setState({ credentials: cred });\n    if(this.room_code===ReturnRoom(code)){\n\n    }\n  }\n\n  login = event => {\n    if (this.state.isLoginView) {\n        console.log(this.state.credentials);\n        fetch('oko-api.herokuapp.com/account/register', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(this.state.credentials)\n        }).then(res => {\n            console.log(res.token);\n            this.props.cookies.set('token', res.token);\n            window.location.href = \"/Oko/\"\n        })\n            .catch(error => console.log(error))\n    }\n  }\n\n  render() {\n    return (\n      <MDBContainer>\n        <MDBBtn onClick={this.toggle}>Add a New Room</MDBBtn>\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n          <MDBModalHeader toggle={this.toggle} style={{ color: 'black' }}>Add Room</MDBModalHeader>\n          <MDBModalBody>\n            <Form>\n              <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label style={{ color: 'black' }}>Room Name</Form.Label>\n                <Form.Control type=\"name\" placeholder=\"Example device\" />\n              </Form.Group>\n            </Form>\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n            <MDBBtn color=\"primary\">Save changes</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default AddRoom;"]},"metadata":{},"sourceType":"module"}