{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/AddDeviceModal.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport Form from 'react-bootstrap/Form';\n\nclass AddDevice extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: this.state.count++,\n      modal: false,\n      credentials: {\n        device_code: `${this.props.dataFromParent}_${this.state.count}`,\n        device_name: '',\n        mac_address: '0',\n        energy_used: '0',\n        state: false,\n        room: this.props.dataFromParent\n      }\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.inputChanged = event => {\n      let cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n    };\n\n    this.registerDevice = event => {\n      console.log(this.state.credentials);\n      fetch('https://oko-api.herokuapp.com/dwelling/device/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(res => {\n        console.log(res.token);\n      }).catch(error => console.log(error));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add a New Device\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggle,\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Add a Device\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Device Name\"), React.createElement(\"input\", {\n      type: \"name\",\n      name: \"device_name\",\n      placeholder: \"Example device\",\n      value: this.state.credentials.device_name,\n      onChange: this.inputChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: this.registerDevice,\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Save changes\")))));\n  }\n\n}\n\nexport default AddDevice;","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/AddDeviceModal.js"],"names":["React","Component","MDBContainer","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","Form","AddDevice","state","count","modal","credentials","device_code","props","dataFromParent","device_name","mac_address","energy_used","room","toggle","setState","inputChanged","event","cred","target","name","value","registerDevice","console","log","fetch","method","headers","body","JSON","stringify","then","res","token","catch","error","render","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport Form from 'react-bootstrap/Form';\n\nclass AddDevice extends Component {\n\n  state = {\n    count: this.state.count++,\n    modal: false,\n    credentials: {\n      device_code: `${this.props.dataFromParent}_${this.state.count}`,\n      device_name: '',\n      mac_address: '0',\n      energy_used: '0',\n      state: false,\n      room: this.props.dataFromParent\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  inputChanged = event => {\n    let cred = this.state.credentials;\n    cred[event.target.name] = event.target.value;\n    this.setState({ credentials: cred });\n  }\n\n  registerDevice = event => {\n    console.log(this.state.credentials);\n    fetch('https://oko-api.herokuapp.com/dwelling/device/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.state.credentials)\n    }).then(res => {\n      console.log(res.token);\n    })\n      .catch(error => console.log(error))\n  }\n\n  render() {\n\n\n    return (\n\n      <div>\n        \n        <MDBContainer>\n          <MDBBtn onClick={this.toggle}>Add a New Device</MDBBtn>\n          <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n            <MDBModalHeader toggle={this.toggle} style={{ color: 'black' }}>Add a Device</MDBModalHeader>\n            <MDBModalBody>\n              <Form>\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                  <Form.Label style={{ color: 'black' }}>Device Name</Form.Label>\n                  <input type=\"name\" name=\"device_name\" placeholder=\"Example device\" value={this.state.credentials.device_name} onChange={this.inputChanged} />\n                </Form.Group>\n              </Form>\n            </MDBModalBody>\n            <MDBModalFooter>\n              <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n              <MDBBtn color=\"primary\" onClick={this.registerDevice} \n              onClick={this.toggle}>Save changes</MDBBtn>\n            </MDBModalFooter>\n          </MDBModal>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default AddDevice;\n"]},"metadata":{},"sourceType":"module"}