{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/progressbar.js\";\nimport React from 'react';\nimport { MDBProgress } from 'mdbreact';\nimport '../App.css';\nimport { Row, Col } from 'react-bootstrap';\n\nconst Progressbar = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.house.map(house => {\n    var goal = 50;\n    var current = 30;\n    var percent = goal - current;\n    const code = \"XJE2-LHA\";\n    const HE = true;\n    const SM = false;\n\n    if (code === \"XJE2-LHA\") {\n      if (HE === true) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(MDBProgress, {\n          material: true,\n          striped: true,\n          value: goal,\n          animated: true,\n          color: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: '1.25em'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Percentage to Goal: \", percent, \"%\"))), React.createElement(Col, {\n          sm: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Your Goal: \", goal))));\n      }\n\n      if (SM === true) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"10\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(MDBProgress, {\n          material: true,\n          striped: true,\n          value: goal,\n          animated: true,\n          color: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: '1.25em'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Percentage to Goal: \", percent, \"%\"))), React.createElement(Col, {\n          sm: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Your Goal: \", goal))));\n      }\n    }\n  }));\n};\n\nexport default Progressbar;\n/*\n<Progress animated color=\"success\" value={25} />\n<Progress animated color=\"info\" value={50} />\n<Progress animated color=\"warning\" value={75} />\n<Progress animated color=\"danger\" value=\"100\" />\n*/","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/progressbar.js"],"names":["React","MDBProgress","Row","Col","Progressbar","props","house","map","goal","current","percent","code","HE","SM","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAO,YAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAwB,iBAAxB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBD,KAAK,IAAI;AACxB,QAAIE,IAAI,GAAG,EAAX;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,OAAO,GAAGF,IAAI,GAAGC,OAArB;AACA,UAAME,IAAI,GAAG,UAAb;AACA,UAAMC,EAAE,GAAG,IAAX;AACA,UAAMC,EAAE,GAAG,KAAX;;AAEA,QAAIF,IAAI,KAAK,UAAb,EAAyB;AACvB,UAAGC,EAAE,KAAK,IAAV,EAAe;AACb,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAa,UAAA,QAAQ,MAArB;AAAsB,UAAA,OAAO,MAA7B;AAA8B,UAAA,KAAK,EAAEJ,IAArC;AAA2C,UAAA,QAAQ,MAAnD;AAAoD,UAAA,KAAK,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,KAAK,EAAE;AAACM,YAAAA,QAAQ,EAAE;AAAX,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAwDJ,OAAxD,MADF,CADJ,CADF,EAME,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAeF,IAAf,CADF,CANF,CAFA,CADF;AAgBD;;AAGD,UAAGK,EAAE,KAAK,IAAV,EAAe;AACb,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,WAAD;AAAa,UAAA,QAAQ,MAArB;AAAsB,UAAA,OAAO,MAA7B;AAA8B,UAAA,KAAK,EAAEL,IAArC;AAA2C,UAAA,QAAQ,MAAnD;AAAoD,UAAA,KAAK,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,KAAK,EAAE;AAACM,YAAAA,QAAQ,EAAE;AAAX,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAwDJ,OAAxD,MADF,CADJ,CADF,EAME,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAeF,IAAf,CADF,CANF,CAFA,CADF;AAgBD;AAEF;AACF,GAjDA,CADH,CADF;AAsDD,CAvDD;;AAyDA,eAAeJ,WAAf;AAGA","sourcesContent":["import React from 'react';\nimport { MDBProgress } from 'mdbreact';\nimport '../App.css';\nimport { Row, Col} from 'react-bootstrap';\n\nconst Progressbar = (props) => {\n  return (\n    <div>\n      {props.house.map(house => {\n        var goal = 50;\n        var current = 30;\n        var percent = goal - current;\n        const code = \"XJE2-LHA\";\n        const HE = true;\n        const SM = false;\n\n        if (code === \"XJE2-LHA\") {\n          if(HE === true){\n            return (\n              <React.Fragment>\n  \n              <Row>\n                <Col sm=\"10\">\n                    <MDBProgress material striped value={goal} animated color=\"default\">\n                      <span style={{fontSize: '1.25em'}}>Percentage to Goal: {percent}%</span>\n                    </MDBProgress>\n                </Col>\n                <Col sm=\"2\">\n                  <p>Your Goal: {goal}</p>\n                </Col>\n              </Row>\n              \n            </React.Fragment>\n            );\n          }\n\n          \n          if(SM === true){\n            return (\n              <React.Fragment>\n  \n              <Row>\n                <Col sm=\"10\">\n                    <MDBProgress material striped value={goal} animated color=\"default\">\n                      <span style={{fontSize: '1.25em'}}>Percentage to Goal: {percent}%</span>\n                    </MDBProgress>\n                </Col>\n                <Col sm=\"2\">\n                  <p>Your Goal: {goal}</p>\n                </Col>\n              </Row>\n              \n            </React.Fragment>\n            );\n          }\n          \n        }\n      })}\n    </div>\n  )\n};\n\nexport default Progressbar;\n\n\n/*\n<Progress animated color=\"success\" value={25} />\n<Progress animated color=\"info\" value={50} />\n<Progress animated color=\"warning\" value={75} />\n<Progress animated color=\"danger\" value=\"100\" />\n*/\n"]},"metadata":{},"sourceType":"module"}