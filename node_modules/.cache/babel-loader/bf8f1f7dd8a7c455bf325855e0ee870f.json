{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/AddRoomModal.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport Form from 'react-bootstrap/Form';\n\nclass AddRoom extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      credentials: {\n        room_name: '',\n        room_code: 'ABC-XYZ_4',\n        related_dwelling: '4',\n        data: [{\n          related_room: 'ABC-XYZ_4',\n          co2: '0',\n          humidity: '0',\n          temperature: '0'\n        }],\n        devices: [{\n          device_code: 'ABC-XYZ_4_1',\n          device_name: '',\n          mac_address: '',\n          energy_used: '0',\n          state: false,\n          room: 'ABC-XYZ_4'\n        }],\n        suggestion: [{\n          id: 1,\n          related_room: 'ABC-XYZ_4',\n          suggestion: 'Kick out Connor'\n        }]\n      }\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.inputChanged = event => {\n      let cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n    };\n\n    this.registerRoom = event => {\n      console.log(this.state.credentials);\n      fetch('https://oko-api.herokuapp.com/dwelling/room/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          room_name: this.state.room_name,\n          room_code: this.state.room_code,\n          related_dwelling: this.state.related_dwelling\n        })\n      }).then(res => {\n        console.log(res.token);\n      }).catch(error => console.log(error));\n    };\n\n    this.registerDevice = event => {\n      console.log(this.state.credentials);\n      fetch('https://oko-api.herokuapp.com/dwelling/device/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          device_code: this.state.credentials.device.device_code,\n          device_name: this.state.credentials.device.device_name,\n          mac_address: this.state.credentials.device.mac_address,\n          energy_used: this.state.credentials.device.energy_used,\n          state: this.state.credentials.device.state,\n          room: this.state.credentials.device.room\n        })\n      }).then(res => {\n        console.log(res.token);\n      }).catch(error => console.log(error));\n    };\n\n    this.registerData = event => {\n      console.log(this.state.credentials);\n      fetch('https://oko-api.herokuapp.com/dwelling/data/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          related_room: this.state.related_room,\n          co2: this.state.co2,\n          humidity: this.state.humidity,\n          temperature: this.state.temperature\n        })\n      }).then(res => {\n        console.log(res.token);\n      }).catch(error => console.log(error));\n    };\n\n    this.registerSuggestion = event => {\n      console.log(this.state.credentials);\n      fetch('https://oko-api.herokuapp.com/dwelling/suggestion/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.credentials.suggestion.id,\n          related_room: this.state.credentials.suggestion.related_room,\n          suggestion: this.state.credentials.suggestion.suggestion\n        })\n      }).then(res => {\n        console.log(res.token);\n      }).catch(error => console.log(error));\n    };\n  }\n\n  render(props) {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Add a New Room\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggle,\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Add Room\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlInput1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Room Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"room_name\",\n      placeholder: \"Example device\",\n      value: this.state.credentials.room_name,\n      onChange: this.inputChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Device Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"device_name\",\n      placeholder: \"Example device\",\n      value: this.state.credentials.device_name,\n      onChange: this.inputChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: this.registerRoom,\n      onClick: this.registerData,\n      onClick: this.registerDevice,\n      onClick: this.registerSuggestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Save changes\"))));\n  }\n\n}\n\nexport default AddRoom;","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/AddRoomModal.js"],"names":["React","Component","MDBContainer","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","Form","AddRoom","state","modal","credentials","room_name","room_code","related_dwelling","data","related_room","co2","humidity","temperature","devices","device_code","device_name","mac_address","energy_used","room","suggestion","id","toggle","setState","inputChanged","event","cred","target","name","value","registerRoom","console","log","fetch","method","headers","body","JSON","stringify","then","res","token","catch","error","registerDevice","device","registerData","registerSuggestion","render","props","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport Form from 'react-bootstrap/Form'\n\n\nclass AddRoom extends Component {\n  state = {\n    modal: false,\n    credentials: {\n      room_name: '',\n      room_code: 'ABC-XYZ_4',\n      related_dwelling: '4',\n      data: [{\n        related_room: 'ABC-XYZ_4',\n        co2: '0',\n        humidity: '0',\n        temperature: '0'\n      }],\n      devices:[{\n        device_code: 'ABC-XYZ_4_1',\n        device_name: '',\n        mac_address: '',\n        energy_used: '0',\n        state: false,\n        room: 'ABC-XYZ_4'\n      }],\n      suggestion: [{\n        id: 1,\n        related_room: 'ABC-XYZ_4',\n        suggestion: 'Kick out Connor'\n      }]\n    }\n  }\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  inputChanged = event => {\n    let cred = this.state.credentials;\n    cred[event.target.name] = event.target.value;\n    this.setState({ credentials: cred });\n  }\n\n  registerRoom = event => {\n    console.log(this.state.credentials);\n    fetch('https://oko-api.herokuapp.com/dwelling/room/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        room_name: this.state.room_name,\n        room_code: this.state.room_code,\n        related_dwelling: this.state.related_dwelling,\n    })\n    }).then(res => {\n      console.log(res.token);\n    })\n      .catch(error => console.log(error))\n  }\n\n  registerDevice = event => {\n    console.log(this.state.credentials);\n    fetch('https://oko-api.herokuapp.com/dwelling/device/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        device_code: this.state.credentials.device.device_code,\n        device_name: this.state.credentials.device.device_name,\n        mac_address: this.state.credentials.device.mac_address,\n        energy_used: this.state.credentials.device.energy_used,\n        state: this.state.credentials.device.state,\n        room: this.state.credentials.device.room\n      })\n    }).then(res => {\n      console.log(res.token);\n    })\n      .catch(error => console.log(error))\n  }\n\n  registerData = event => {\n    console.log(this.state.credentials);\n    fetch('https://oko-api.herokuapp.com/dwelling/data/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        related_room: this.state.related_room,\n        co2: this.state.co2,\n        humidity: this.state.humidity,\n        temperature: this.state.temperature\n      })\n    }).then(res => {\n      console.log(res.token);\n    })\n      .catch(error => console.log(error))\n  }\n\n  registerSuggestion = event => {\n    console.log(this.state.credentials);\n    fetch('https://oko-api.herokuapp.com/dwelling/suggestion/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        id: this.state.credentials.suggestion.id,\n        related_room: this.state.credentials.suggestion.related_room,\n        suggestion: this.state.credentials.suggestion.suggestion\n      })\n    }).then(res => {\n      console.log(res.token);\n    })\n      .catch(error => console.log(error))\n  }\n\n  render(props) {\n\n    return (\n      <MDBContainer>\n        <MDBBtn onClick={this.toggle}>Add a New Room</MDBBtn>\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n          <MDBModalHeader toggle={this.toggle} style={{ color: 'black' }}>Add Room</MDBModalHeader>\n          <MDBModalBody>\n            <Form>\n              <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label style={{ color: 'black' }}>Room Name</Form.Label>\n                <input type=\"text\" name=\"room_name\" placeholder=\"Example device\" value={this.state.credentials.room_name} onChange={this.inputChanged} />\n                <Form.Label style={{ color: 'black' }}>Device Name</Form.Label>\n                <input type=\"text\" name=\"device_name\" placeholder=\"Example device\" value={this.state.credentials.device_name} onChange={this.inputChanged} />\n              </Form.Group>\n            </Form>\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n            <MDBBtn color=\"primary\" onClick={this.registerRoom} onClick={this.registerData} onClick={this.registerDevice} onClick={this.registerSuggestion}>Save changes</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default AddRoom;"]},"metadata":{},"sourceType":"module"}