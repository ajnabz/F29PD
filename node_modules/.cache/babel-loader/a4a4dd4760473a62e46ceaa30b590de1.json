{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/ChartsPage.js\";\n//MDB REACT LIBRARY\nimport React from 'react';\nimport { Line, Pie } from 'react-chartjs-2';\nimport { MDBContainer } from 'mdbreact';\nimport SectionContainer from '../components/sectionContainer';\nimport ReactDOM from \"react-dom\";\nimport { Bar } from \"react-chartjs-2\";\nimport html2canvas from \"html2canvas\";\n\nconst pdfConverter = require(\"jspdf\");\n\nconst chartData = [0, 1, 5, 10, 10, 10, 18, 30, 45, 40, 33, 22, 10, 10, 10, 10, 10, 20, 33, 45, 42, 55, 30, 23]; // LineChart\n\nconst dataLine = {\n  labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n  datasets: [{\n    label: 'kWh',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: chartData\n  }]\n}; // Pie Chart\n\nconst dataPie = {\n  labels: ['Lighting', 'Cooling and Heating', 'Washer and Dryer', 'Oven', 'Water Heater'],\n  datasets: [{\n    data: [300, 50, 100, 40, 240],\n    backgroundColor: ['#F7464A', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360', '#ac64ad'],\n    hoverBackgroundColor: ['#FF5A5E', '#5AD3D1', '#FFC870', '#A8B3C5', '#616774', '#da92db']\n  }]\n};\n\ndiv2PDF = e => {\n  const but = e.target;\n  but.style.display = \"none\";\n  let input = window.document.getElementsByClassName(\"div2PDF\")[0];\n  html2canvas(input).then(canvas => {\n    const img = canvas.toDataURL(\"image/png\");\n    const pdf = new pdfConverter(\"l\", \"pt\");\n    pdf.addImage(img, \"png\", input.offsetLeft, input.offsetTop, input.clientWidth, input.clientHeight);\n    pdf.save(\"chart.pdf\");\n    but.style.display = \"block\";\n  });\n};\n\nconst ChartsPage = () => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(MDBContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(SectionContainer, {\n    header: \"Used so far today: 51 kWh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Line, {\n    data: dataLine,\n    options: {\n      responsive: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(SectionContainer, {\n    header: \"Devices used today\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: dataPie,\n    options: {\n      responsive: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: e => this.div2PDF(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Export 2 PDF\"))));\n};\n\nexport default ChartsPage;\nReactDOM.render(React.createElement(Chart, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/ChartsPage.js"],"names":["React","Line","Pie","MDBContainer","SectionContainer","ReactDOM","Bar","html2canvas","pdfConverter","require","chartData","dataLine","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","dataPie","hoverBackgroundColor","div2PDF","e","but","target","style","display","input","window","document","getElementsByClassName","then","canvas","img","toDataURL","pdf","addImage","offsetLeft","offsetTop","clientWidth","clientHeight","save","ChartsPage","responsive","render","getElementById"],"mappings":"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","sourcesContent":["//MDB REACT LIBRARY\nimport React from 'react';\nimport { Line, Pie } from 'react-chartjs-2';\nimport { MDBContainer } from 'mdbreact';\nimport SectionContainer from '../components/sectionContainer';\nimport ReactDOM from \"react-dom\";\nimport { Bar } from \"react-chartjs-2\";\nimport html2canvas from \"html2canvas\";\n\n\nconst pdfConverter = require(\"jspdf\");\nconst chartData = [0, 1, 5, 10, 10, 10, 18, 30, 45, 40, 33, 22, 10, 10, 10, 10, 10, 20, 33, 45, 42, 55, 30, 23];\n\n// LineChart\nconst dataLine = {\n  labels: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n  datasets: [\n    {\n      label: 'kWh',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: chartData\n    }\n  ]\n};\n\n\n// Pie Chart\nconst dataPie = {\n  labels: ['Lighting', 'Cooling and Heating', 'Washer and Dryer', 'Oven', 'Water Heater'],\n  datasets: [\n    {\n      data: [300, 50, 100, 40, 240],\n      backgroundColor: [\n        '#F7464A',\n        '#46BFBD',\n        '#FDB45C',\n        '#949FB1',\n        '#4D5360',\n        '#ac64ad'\n      ],\n      hoverBackgroundColor: [\n        '#FF5A5E',\n        '#5AD3D1',\n        '#FFC870',\n        '#A8B3C5',\n        '#616774',\n        '#da92db'\n      ]\n    }\n  ]\n};\n\ndiv2PDF = e => {\n\n  const but = e.target;\n  but.style.display = \"none\";\n  let input = window.document.getElementsByClassName(\"div2PDF\")[0];\n\n  html2canvas(input).then(canvas => {\n    const img = canvas.toDataURL(\"image/png\");\n    const pdf = new pdfConverter(\"l\", \"pt\");\n    pdf.addImage(\n      img,\n      \"png\",\n      input.offsetLeft,\n      input.offsetTop,\n      input.clientWidth,\n      input.clientHeight\n    );\n    pdf.save(\"chart.pdf\");\n    but.style.display = \"block\";\n  });\n};\n\n\nconst ChartsPage = () => {\n  return (\n    <React.Fragment>\n      <MDBContainer>\n\n        <div className=\"row\">\n        \n          <div className=\"col-md-6\">\n\n            <SectionContainer header='Used so far today: 51 kWh' >\n              <Line data={dataLine} options={{ responsive: true }} />\n            </SectionContainer>\n          </div>\n          <div className=\"col-md-6\">\n            <SectionContainer header='Devices used today'>\n              <Pie data={dataPie} options={{ responsive: true }} />\n            </SectionContainer>\n          </div>\n        </div>\n\n        <div>\n          <button onClick={e => this.div2PDF(e)}>Export 2 PDF</button>\n        </div>\n\n      </MDBContainer>\n    </React.Fragment>\n  );\n};\n\nexport default ChartsPage;\n\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}