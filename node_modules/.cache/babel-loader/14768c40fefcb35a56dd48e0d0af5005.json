{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/shareChart.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Bar } from \"react-chartjs-2\";\nimport html2canvas from \"html2canvas\";\n\nconst pdfConverter = require(\"jspdf\");\n\nclass Chart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.cData = {\n      labels: [\"L 1\", \"L 2\", \"L 3\", \"L 4\", \"L 5\"],\n      datasets: [{\n        label: \"Label\",\n        data: [100, 150, 123, 170, 162],\n        backgroundColor: [\"red\", \"green\", \"yellow\", \"blue\", \"orange\", \"red\"]\n      }]\n    };\n\n    this.div2PDF = e => {\n      /////////////////////////////\n      // Hide/show button if you need\n      /////////////////////////////\n      const but = e.target;\n      but.style.display = \"none\";\n      let input = window.document.getElementsByClassName(\"div2PDF\")[0];\n      html2canvas(input).then(canvas => {\n        const img = canvas.toDataURL(\"image/png\");\n        const pdf = new pdfConverter(\"l\", \"pt\");\n        pdf.addImage(img, \"png\", input.offsetLeft, input.offsetTop, input.clientWidth, input.clientHeight);\n        pdf.save(\"chart.pdf\");\n        but.style.display = \"block\";\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div2PDF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.cData,\n      options: {\n        title: {\n          display: true,\n          text: \"Chart to PDF Demo\",\n          fontSize: 32\n        },\n        legend: {\n          display: true,\n          position: \"right\"\n        }\n      },\n      height: 200,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.div2PDF(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Export 2 PDF\")));\n  }\n\n}\n\nexport default Chart;\nReactDOM.render(React.createElement(Chart, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/shareChart.js"],"names":["React","Component","ReactDOM","Bar","html2canvas","pdfConverter","require","Chart","cData","labels","datasets","label","data","backgroundColor","div2PDF","e","but","target","style","display","input","window","document","getElementsByClassName","then","canvas","img","toDataURL","pdf","addImage","offsetLeft","offsetTop","clientWidth","clientHeight","save","render","title","text","fontSize","legend","position","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,aAAxB;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,OAAD,CAA5B;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BO,KAD4B,GACpB;AACNC,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CADF;AAENC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,OADT;AAEEC,QAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAFR;AAGEC,QAAAA,eAAe,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,KAA7C;AAHnB,OADQ;AAFJ,KADoB;;AAAA,SAY5BC,OAZ4B,GAYlBC,CAAC,IAAI;AACb;AACA;AACA;AAEA,YAAMC,GAAG,GAAGD,CAAC,CAACE,MAAd;AACAD,MAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,GAAoB,MAApB;AACA,UAAIC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBC,sBAAhB,CAAuC,SAAvC,EAAkD,CAAlD,CAAZ;AAEAnB,MAAAA,WAAW,CAACgB,KAAD,CAAX,CAAmBI,IAAnB,CAAwBC,MAAM,IAAI;AAChC,cAAMC,GAAG,GAAGD,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAZ;AACA,cAAMC,GAAG,GAAG,IAAIvB,YAAJ,CAAiB,GAAjB,EAAsB,IAAtB,CAAZ;AACAuB,QAAAA,GAAG,CAACC,QAAJ,CACEH,GADF,EAEE,KAFF,EAGEN,KAAK,CAACU,UAHR,EAIEV,KAAK,CAACW,SAJR,EAKEX,KAAK,CAACY,WALR,EAMEZ,KAAK,CAACa,YANR;AAQAL,QAAAA,GAAG,CAACM,IAAJ,CAAS,WAAT;AACAlB,QAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,GAAoB,OAApB;AACD,OAbD;AAcD,KAnC2B;AAAA;;AAqC5BgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAE,KAAK3B,KADb;AAEE,MAAA,OAAO,EAAE;AACP4B,QAAAA,KAAK,EAAE;AACLjB,UAAAA,OAAO,EAAE,IADJ;AAELkB,UAAAA,IAAI,EAAE,mBAFD;AAGLC,UAAAA,QAAQ,EAAE;AAHL,SADA;AAMPC,QAAAA,MAAM,EAAE;AACNpB,UAAAA,OAAO,EAAE,IADH;AAENqB,UAAAA,QAAQ,EAAE;AAFJ;AAND,OAFX;AAaE,MAAA,MAAM,EAAE,GAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAEzB,CAAC,IAAI,KAAKD,OAAL,CAAaC,CAAb,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAlBF,CADF;AAwBD;;AA9D2B;;AAiE9B,eAAeR,KAAf;AAEAL,QAAQ,CAACiC,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2Bb,QAAQ,CAACmB,cAAT,CAAwB,MAAxB,CAA3B","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Bar } from \"react-chartjs-2\";\nimport html2canvas from \"html2canvas\";\nconst pdfConverter = require(\"jspdf\");\n\nclass Chart extends Component {\n  cData = {\n    labels: [\"L 1\", \"L 2\", \"L 3\", \"L 4\", \"L 5\"],\n    datasets: [\n      {\n        label: \"Label\",\n        data: [100, 150, 123, 170, 162],\n        backgroundColor: [\"red\", \"green\", \"yellow\", \"blue\", \"orange\", \"red\"]\n      }\n    ]\n  };\n\n  div2PDF = e => {\n    /////////////////////////////\n    // Hide/show button if you need\n    /////////////////////////////\n\n    const but = e.target;\n    but.style.display = \"none\";\n    let input = window.document.getElementsByClassName(\"div2PDF\")[0];\n\n    html2canvas(input).then(canvas => {\n      const img = canvas.toDataURL(\"image/png\");\n      const pdf = new pdfConverter(\"l\", \"pt\");\n      pdf.addImage(\n        img,\n        \"png\",\n        input.offsetLeft,\n        input.offsetTop,\n        input.clientWidth,\n        input.clientHeight\n      );\n      pdf.save(\"chart.pdf\");\n      but.style.display = \"block\";\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"div2PDF\">\n          <Bar\n            data={this.cData}\n            options={{\n              title: {\n                display: true,\n                text: \"Chart to PDF Demo\",\n                fontSize: 32\n              },\n              legend: {\n                display: true,\n                position: \"right\"\n              }\n            }}\n            height={200}\n          />\n        </div>\n        <div>\n          <button onClick={e => this.div2PDF(e)}>Export 2 PDF</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n\nReactDOM.render(<Chart />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}