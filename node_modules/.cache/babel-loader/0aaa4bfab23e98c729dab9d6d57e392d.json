{"ast":null,"code":"var _jsxFileName = \"/Users/abbieprescott/Documents/GitHub/F29PD/src/components/clockFunction.js\";\nimport React from 'react';\n\nclass ClockFunction extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      time: new Date(),\n      isAnalogueView: true,\n      isDigitalView: false\n    };\n  }\n\n  onClick() {\n    if (isAnalogueView === true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, time.toLocaleTimeString()));\n    } else if (isDigitalView === true) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Clock\"), React.createElement(\"div\", {\n        className: \"analog-clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dial seconds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dial minutes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dial hours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"digital-clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    }\n  }\n\n  componentDidMount() {\n    // create the interval once component is mounted\n    this.update = setInterval(() => {\n      this.setState({\n        time: new Date()\n      });\n    }, 1 * 1000); // every 1 seconds\n  }\n\n  componentWillUnmount() {\n    // delete the interval just before component is removed\n    clearInterval(this.update);\n  }\n\n  render() {\n    const {\n      time\n    } = this.state; // retrieve the time from state\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, onClick());\n  }\n\n}\n\nexport default ClockFunction;","map":{"version":3,"sources":["/Users/abbieprescott/Documents/GitHub/F29PD/src/components/clockFunction.js"],"names":["React","ClockFunction","Component","constructor","state","time","Date","isAnalogueView","isDigitalView","onClick","toLocaleTimeString","componentDidMount","update","setInterval","setState","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADG;AAETC,MAAAA,cAAc,EAAE,IAFP;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAAb;AAOH;;AAEDC,EAAAA,OAAO,GAAG;AACN,QAAIF,cAAc,KAAK,IAAvB,EAA6B;AACzB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKF,IAAI,CAACK,kBAAL,EAFL,CADJ,CADJ;AAQH,KATD,MASO,IAAGF,aAAa,KAAK,IAArB,EAA0B;AAC7B,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,QAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,EAOI;AAAK,QAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADJ,CADJ;AAcH;AACJ;;AAEDG,EAAAA,iBAAiB,GAAG;AAAE;AAClB,SAAKC,MAAL,GAAcC,WAAW,CAAC,MAAM;AAC5B,WAAKC,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR,OAAd;AACH,KAFwB,EAEtB,IAAI,IAFkB,CAAzB,CADgB,CAGF;AACjB;;AAEDS,EAAAA,oBAAoB,GAAG;AAAE;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,MAAN,CAAb;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEZ,MAAAA;AAAF,QAAW,KAAKD,KAAtB,CADK,CACwB;;AAE7B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMK,OAAO,EAAb,CADJ;AAGH;;AAzDuC;;AA4D5C,eAAeR,aAAf","sourcesContent":["import React from 'react';\n\nclass ClockFunction extends React.Component {\n\n    constructor() {\n        super();\n        this.state = { \n            time: new Date(),\n            isAnalogueView: true,\n            isDigitalView: false\n        \n        };\n    \n    }\n\n    onClick() {\n        if (isAnalogueView === true) {\n            return (\n                <div>\n                    <div>\n                        {/* print the string prettily */}\n                        {time.toLocaleTimeString()}\n                    </div>\n                </div>\n            );\n        } else if(isDigitalView === true){\n            return (\n                <React.Fragment>\n                    <div className={\"clock\"}>\n                        <h3>Clock</h3>\n                        <div className={\"analog-clock\"}>\n                            <div className={\"dial seconds\"} />\n                            <div className={\"dial minutes\"} />\n                            <div className={\"dial hours\"} />\n                        </div>\n                        <div className={\"digital-clock\"}></div>\n                    </div>\n                </React.Fragment>\n            );\n\n        }\n    }\n\n    componentDidMount() { // create the interval once component is mounted\n        this.update = setInterval(() => {\n            this.setState({ time: new Date() });\n        }, 1 * 1000); // every 1 seconds\n    }\n\n    componentWillUnmount() { // delete the interval just before component is removed\n        clearInterval(this.update);\n    }\n\n    render() {\n        const { time } = this.state; // retrieve the time from state\n\n        return (\n            <div>{onClick()}</div>\n        );\n    }\n}\n\nexport default ClockFunction;"]},"metadata":{},"sourceType":"module"}